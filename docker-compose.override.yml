version: "3"
services:

  db-local:
    container_name: db-local
    image: postgres:14-alpine
    ports:
      - 5432:5432
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db-local-data:/var/lib/postgresql/data/pgdata
      # - ./services/_api/src/db/sql:/docker-entrypoint-initdb.d/
    command: postgres -c log_statement=all


  cloudsql-proxy: # access your cloud sql database from your local machine
    container_name: cloudsql-proxy
    image: gcr.io/cloudsql-docker/gce-proxy:latest
    ports:
      - 5433:5432
    volumes:
      - ./services/database/keys:/config
    restart: always
    command: /cloud_sql_proxy --dir=/cloudsql -instances=your-gcp:europe-west1:quick-desk-sql-instance=tcp:0.0.0.0:5432 -credential_file=/config/google-creds.json


  pgadmin: # postgres database graphical interface dashboard
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@postgres.com
      - PGADMIN_DEFAULT_PASSWORD=grespost
      - PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=True
    volumes:
       - pgadmin-data:/var/lib/pgadmin


  firebase: # custom image for running firestore emulators locally
    container_name: firebase_container
    build:
      context: ./services/digest_all
      dockerfile: firebase.dockerfile
      network: host
    ports:
      - 4000:4000 # Emulator UI
      - 9099:9099 # Authentication
      - 5001:5001 # Functions
      - 8080:8080 # Firestore
      - 5000:5000 # Hosting
      - 5001:5001 # Extensions
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/tmp/keys/application_default_credentials.json
    volumes:
      - firebase-data:/home/node/data/
      - ./services/digest_web/app:/home/node/app
      - ~/.config/gcloud/application_default_credentials.json:/tmp/keys/application_default_credentials.json
    command: firebase emulators:start --only auth,firestore,functions --import /home/node/data/firebase --export-on-exit
    # tty: true


  redis:
    container_name: redis
    image: redis:alpine
    # environment:
      # - REDIS_PASSWORD=ubuntu
      # - REDIS_REPLICATION_MODE=master
    ports:
      - 6379:6379
    volumes:
      - redis-data:/var/lib/redis
      - ./services/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server
    # restart: unless-stopped


  redisinsight: # redis db visualization dashboard
    container_name: redisinsight
    image: redislabs/redisinsight
    ports:
      - 8001:8001
    volumes:
      - redisinsight-data:/db


  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    environment:
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_URL=postgres://postgres:postgres@db-local:5432/grafana
      # - GF_DATABASE_SSL_MODE=disable
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000

volumes:
  db-local-data:
  pgadmin-data:
  firebase-data:
  redis-data:
  redisinsight-data:
  grafana-data:
